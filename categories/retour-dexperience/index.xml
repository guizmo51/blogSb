<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Retour Dexperience on Blog </title>
    <link>http://localhost:1313/categories/retour-dexperience/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Sat, 08 Aug 2015 13:57:26 CEST</updated>
    
    <item>
      <title>MapBoostadopt</title>
      <link>http://localhost:1313/post/retourdexperience/mapboostadopt/</link>
      <pubDate>Sat, 08 Aug 2015 13:57:26 CEST</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://localhost:1313/post/retourdexperience/mapboostadopt/</guid>
      <description>&lt;p&gt;Comme vous avez pu le &lt;a href=&#34;http://www.simonblum.me/post/retourdexperience/boostadopt/&#34; target=&#34;_blank&#34;&gt;lire précèdemment&lt;/a&gt; j&amp;rsquo;ai réalisé un projet de &amp;ldquo;booster&amp;rdquo; (permettant d&amp;rsquo;améliorer l&amp;rsquo;efficacité) pour le site de rencontre AdopteUnMec.com .&lt;/p&gt;

&lt;p&gt;Lors de mes expérimentations (afin de trouver une solution viable) j&amp;rsquo;ai agrégé une masse conséquente de profils dans le but de les analyser et les exploiter dans le futur. En effet, le booster fonctionne en visitant un profil (donc en récupérant ses informations) autant enregistrer ce profil pour une utilisation ultérieure.&lt;/p&gt;

&lt;p&gt;Etant fan des big data et de cartographie j&amp;rsquo;ai donc souhaité mettre en place une grande carte interactive des profils d&amp;rsquo;AdopteUnMec. Suite à une mise en demeure ce projet a été désactivé. Il n&amp;rsquo;est malheureusement plus possible de le visualiser. Ce projet se voulait comme un outil pour faire du &amp;ldquo;buzz&amp;rdquo; autour des aspects &amp;ldquo;données&amp;rdquo; et &amp;ldquo;cartographie&amp;rdquo; afin de communiquer sur BoostAdopt.&lt;/p&gt;

&lt;p&gt;Voici une capture d&#39;écran du projet MapBoostAdopt.
J&#39;ai souhaité mettre en place une interface légère avec comme fond (sur tout l&#39;écran) une carte interactive utilisant OpenStreetMap. Par dessus j&#39;ai rajouté un champ de recherche par ville et aussi 5 profils d&#39;invidus géographiquement présent sur la carte visible. Bien sûr si l&#39;on zoomait sur une zone ces résultats étaient mis à jour. Sur cette capture d&#39;écran on peut voir que des utilisateurs provenant de France, Suisse, Luxembourg, Belgique sont présents. Suite à l&#39;ouverture du site italien et du site allemand j&#39;ai aussi pu enregistrer des profils provenant de ces 2 nouveaux pays.  
&lt;img src=&#34;http://localhost:1313/images/boostadopt.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;Coin technique&lt;/h3&gt;
 Les profils retournés par l&amp;rsquo;API sont des documents JSON ayant des formats variés, en effet un profil complet aura 100% des attributs remplis. Au contraire quelqu&amp;rsquo;un n&amp;rsquo;ayant rempli que le strict minimum n&amp;rsquo;aura que très peu d&amp;rsquo;attributs de retournés par l&amp;rsquo;API. Ce format étant varié j&amp;rsquo;ai donc choisi MongoDB qui est de type NoSQL pour gèrer le stockage de ces profils. Enfin MongoDB retourne directement un document JSON, je n&amp;rsquo;ai pas à demander à NodeJS de gèrer cela.&lt;/p&gt;

&lt;p&gt;&lt;style type=&#34;text/css&#34;&gt;
  .gist {width:500px !important;}
  .gist-file
  .gist-data {max-height: 500px;max-width: 500px;}
&lt;/style&gt;
&lt;p&gt;Exemple d&amp;rsquo;un JSON retourné par l&amp;rsquo;API d&amp;rsquo;AdopteUnMec.com&lt;/p&gt;
 &lt;script src=&#34;https://gist.github.com/guizmo51/4095f94900b4918ec6f3.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Alors que l&amp;rsquo;agrégation des profils se faisait dans le projet &amp;ldquo;boostAdopt&amp;rdquo; en PHP, j&amp;rsquo;ai mis en place une API en utilisant ExpressJS (qui est un framework NodeJS)&lt;/p&gt;

&lt;p&gt;Le front utilise jQuery, boostrap et pour le côté cartographie j&amp;rsquo;ai utilisé MapQuest fournissant une cartographie OpenStreetMap ou Google Maps au choix. MapQuest fournit également un accès à ses API pour, par exemple, obtenir les coordonnées GPS du centre d&amp;rsquo;une ville.&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;Législation&lt;/h3&gt;&lt;/p&gt;

&lt;p&gt;Les données sont importantes celles qui sont personnelles ne peuvent être diffusées comme cela. J&amp;rsquo;ai donc analysé pendant plusieurs semaines les mentions légales, CGU et CGV du site AdopteUnMec.com. Les données personnelles (email, nom, prénom, etc) ne sont pas présentes dans les JSON générés par l&amp;rsquo;API AdopteUnmec. La seule contrainte est de s&amp;rsquo;assurer qu&amp;rsquo;uniquement des utilisateurs d&amp;rsquo;AdopteUnMec accèdent à ces données. J&amp;rsquo;ai donc mis en place une popin de confirmation (un peu comme celles demandant si un internaute est bien majeur sur certains sites). Chacun jugera de l&amp;rsquo;efficacité de ce système&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;h3&gt; Déroulement du projet&lt;/h3&gt;
Initialement le projet n&amp;rsquo;enregistrait que la fiche d&amp;rsquo;un individu : la localisation ne correspondait qu&amp;rsquo;à un champs portant le nom de la ville du membre. En France plusieurs villes ont le même nom, de plus certans membres renseignaient des villes à l&amp;rsquo;orthographe incorrecte. J&amp;rsquo;ai dû revoir en partie l&amp;rsquo;agréagation des données afin de sauvegarder le pays, la région mais aussi le département du membre.&lt;/p&gt;

&lt;p&gt;MapQuest fournissant des API retournant les coordonées GPS d&amp;rsquo;un point géographie comme une ville, j&amp;rsquo;ai ensuite associé chaque ville à des coordonnées GPS. Enfin il ne me restait plus qu&amp;rsquo;à associer la ville du profil à ce tableau de coordonnées.&lt;/p&gt;

&lt;p&gt;Enfin pour l&amp;rsquo;affichage j&amp;rsquo;ai choisi la librairie leaflet permettant de représenter des clusters de marqueurs géographiques.
Dans les faits je place plusieurs milliers de marqueurs sur ma carte OpenStreetMap mais afin de la rendre lisible leaflet les affiche sont forme de cluster en indiquant le nombre de marqueur que ça représente. C&amp;rsquo;est la représentation la plus lisible possible.&lt;/p&gt;

&lt;p&gt;NodeJS : lors de la mise en production et des premiers tests de montée en charge je me suis rendu compte que &amp;ldquo;forever&amp;rdquo; de NodeJS se met parfois à &amp;ldquo;déconner&amp;rdquo;. Il fait monter la charge du serveur à 95 ou 98% de CPU &amp;hellip; ce bug était connu à l&amp;rsquo;époque.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Boostadopt</title>
      <link>http://localhost:1313/post/retourdexperience/boostadopt/</link>
      <pubDate>Sun, 05 Jul 2015 13:57:26 CEST</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://localhost:1313/post/retourdexperience/boostadopt/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/logo-adopte-un-mec.jpg&#34; alt=&#34;logo AdopteUnMec&#34; /&gt;

Tout ce projet est visible sur &lt;a href=&#34;https://github.com/guizmo51/boostadopt&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pendant de nombreuses années et depuis l&amp;rsquo;ouverture de ce site de rencontre j&amp;rsquo;ai été utilisateur du site &lt;a href=&#34;http://www.adopteunmec.com&#34;&gt;AdopteUnMec.com&lt;/a&gt; (ce n&amp;rsquo;est plus le cas maintenant ;-) ). Ce site a un concept assez particulier lui ayant permis de se démarquer : les hommes possèdent un nombre de charmes limité (un charme est semblable à un poke sur Facebook), la personne recevant un charme d’un autre utilisateur est notifiée de ce charme. Elle peut ensuite autoriser ou non, l&amp;rsquo;émetteur du charme à lui écrire des messages. Suite à cela conversation peut s&amp;rsquo;engager.&lt;/p&gt;

&lt;p&gt;Le site AdopteUnMec a eu un business model assez mouvant depuis sa création puisqu&amp;rsquo;à l&amp;rsquo;origine gratuit il est devenu de plus en plus payant.&lt;/p&gt;

&lt;p&gt;Je ne souhaitais pas payer pour avoir accès à ce site et j&amp;rsquo;ai eu la chance d&amp;rsquo;avoir crée un compte dès le lancement du site. J&amp;rsquo;ai donc pu avoir un accès gratuit à certaines fonctionnalités.&lt;/p&gt;

&lt;p&gt;Un jour  (en 2010) je me suis rendu compte par un test tout simple (création d&amp;rsquo;un profil &amp;ldquo;femmes&amp;rdquo;) que les profils d&amp;rsquo;hommes ayant un compte gratuit remontaient beaucoup moins dans les résultats de recherches. Je n&amp;rsquo;ai toutefois pas réussi à déterminer l&amp;rsquo;algorithme en place derrière. Afin d&amp;rsquo;optmiser mes chances sur ce site j&amp;rsquo;ai élaboré une autre théorie : si je visite 100 profils et que ma fiche est intéressante alors un pourcentage (15% - ) va venir la lire, et parmis ces 15% une faible proportion va m&amp;rsquo;autoriser à lui écrire. Au final sur 100 filles, 3 ou 4 vont m&amp;rsquo;autoriser à leur écrire. Très intéressé par les études et les statistiques je souhaitais mettre en place un système d&amp;rsquo;analyse et de remontée de ces stats mais je n&amp;rsquo;en ai pas eu le temps.&lt;/p&gt;

&lt;p&gt;Une autre idée m&amp;rsquo;est venue en tête : au lieu de visiter manuellement ces profils (ce qui est une tâche rébarbative et longue), si je réalisais un programme faisant le travail à ma place ? Je me suis donc lancé dans la réalisation d&amp;rsquo;un script visitant automatiquement en peu de temps des profils définis selon plusieurs paramètres.&lt;/p&gt;

&lt;p&gt;Initialement mon script faisait un travail classique : il simulait une connexion via le formulaire HTMl puis visitait les profils en chargeant les pages HTML des profils. Après un temps d&amp;rsquo;utilisation je me suis rendu compte de plusieurs choses :
*les profils HTML étaient longs à charger. Normal c&amp;rsquo;est une page HTML donc plusieurs centaines de KiloOctet à chaque fois.
*l&amp;rsquo;accès au site AdopteUnMec à travers la version &amp;ldquo;desktop&amp;rdquo; était restreinte entre 18h et 1h du matin, cela réduisait le temps d&amp;rsquo;utilisation potentiel du script.&lt;/p&gt;

&lt;p&gt;Suite à cela je me suis rendu compte que l&amp;rsquo;application Android d&amp;rsquo;AdopteUnMec ne subissait pas de blocage entre 18h et 1H du matin (toujours pour le même compte bloqué sur la version &amp;ldquo;desktop&amp;rdquo; du site). La conclusion est simple : si l&amp;rsquo;application Android arrive à visiter cela alors mon script pourra le faire.&lt;/p&gt;

&lt;p&gt;J&amp;rsquo;ai alors ouvert Wireshark qui est un utilitaire qui permet de capturer les packets passant sur le réseau. Pour vulgariser : ce logiciel permet de voir en partie les données transitant entre les ordinateurs du réseau observé. Pendant ce temps j&amp;rsquo;ai utilisé l&amp;rsquo;application Android sur tous les cas possibles : connexion, déconnexion, recherches, visites, charmes, envois de messages. Le but était d&amp;rsquo;obtenir toutes les urls appelées et les paramètres (les données que l&amp;rsquo;on donne à ces urls afin d&amp;rsquo;obtenir ce que l&amp;rsquo;on souhaite : l&amp;rsquo;identifiant du profil, les paramètres de recherches , etc).&lt;/p&gt;

&lt;p&gt;Une fois toutes ces informations récupérées j&amp;rsquo;ai pris le temps de reconstruire tout mon script autour de cette API : au final les requêtes sont devenues plus rapides. En effet l&amp;rsquo;API retourne du JSON qui est donc rapidement exploitable par le serveur PHP alors qu&amp;rsquo;auparavant il fallait parser du HTML.&lt;/p&gt;

&lt;p&gt;Une fois cela effectué tout était presque réglé : il y avait seulement des améliorations visant à ne pas être blacklisté par AdopteUnMec. Initialement cela était basé sur la fréquence des visites (si le temps était inférieur à 2 ou 3 secondes le compte pouvait être bloqué).&lt;/p&gt;

&lt;p&gt;Puis vint un jour où j&amp;rsquo;ai voulu réaliser et monétiser une webapp à destination de tous les utilisateurs d&amp;rsquo;AdopteunMec. Le but de cette application était d&amp;rsquo;avoir une interface propre et épurée permettant de lancer automatiquement des visites sur un type de profil déterminé par la recherche. J&amp;rsquo;ai nommé le fait de visiter rapidement plusieurs dizaines de profils déterminés &amp;ldquo;Booster&amp;rdquo;. Suite à cela j&amp;rsquo;ai appelé mon application &amp;ldquo;BoostAdopt.com&amp;rdquo;. Ma recherche de nom de domaine a été très rapide mais une fois effectuée je me suis aperçu qu&amp;rsquo;existait déjà le nom de domaine &amp;ldquo;boostAdopte.com&amp;rdquo;. Ce dernier avait été désactivé avant d&amp;rsquo;acheter le nom que j&amp;rsquo;avais choisis.&lt;/p&gt;

&lt;h2 id=&#34;architecture-du-projet:5d89a49772d283f3ee4fbc1839d2b90e&#34;&gt;Architecture du projet&lt;/h2&gt;

&lt;p&gt;Avant de foncer tête baissée j&amp;rsquo;ai réfléchi à toutes les problématiques que j&amp;rsquo;aurai à affronter sur ce projet.&lt;/p&gt;

&lt;p&gt;Le premier problème fut le suivant : alors que j&amp;rsquo;enregistrais automatiquement les profils visités au bout de 100 000 hits (visites) l&amp;rsquo;IP du serveur appelant a été blacklistée. En clair mon serveur n&amp;rsquo;avait plus accès aux serveurs d&amp;rsquo;AdopteUnMec. même si un utilisateur n&amp;rsquo;allait pas faire 100 000 visites d&amp;rsquo;un coup , admettons que 1000 utilisateurs fassent 100 visites chacun et le service était bloqué.
 Sur le papier il devint donc dur de proposer un service qui pourrait s&amp;rsquo;arrêter du jour au lendemain. Une solution aurait pu être de changer d&amp;rsquo;IP une fois chacune d&amp;rsquo;entre elle blacklistée mais cela aurait été coûteux et aurait rendu le site peu fiable qualitativement parlant. L&amp;rsquo;expérience utilisateur pour ceux qui se retrouvent bloqués le temps du changement d&amp;rsquo;IP aurait été peu appréciée. Imaginez qu&amp;rsquo;un utilisateur paie, lance le booster et se retrouve bloqué car le serveur vient d&amp;rsquo;être blacklisté : çela aurait été très problèmatique.&lt;/p&gt;

&lt;p&gt;Pour schématiser l&amp;rsquo;architecture précédemment citée : les utilisateurs exécutaient du PHP sur mon serveur, ce dernier appelait les serveurs d&amp;rsquo;AdopteUnMec. C&amp;rsquo;est une seule IP, celle du serveur (ou à la rigueur quelques IPs si plusieurs serveurs).&lt;/p&gt;

&lt;p&gt;Quelques jours plus tard me vint une idée un peu plus folle: que ça soit l&amp;rsquo;IP propre à chaque utilisateur qui appelle le serveur AdopteUnMec. Cela a beaucoup d&amp;rsquo;avantages : je n&amp;rsquo;ai pas de changement d&amp;rsquo;IP à faire et le service reste fiable.
 L&amp;rsquo;inconvénient majeur est qu&amp;rsquo;il faut donner le code &amp;ldquo;métier&amp;rdquo; du côté du navigateur donc facilement imitable et donc le business deviendrait réduit ou inopérant. En effet n&amp;rsquo;importe qui pourrait réutiliser le code et le mettre à disposition gratuitement d&amp;rsquo;autres utilisateurs.&lt;/p&gt;

&lt;p&gt;L&amp;rsquo;idée finale concernant l&amp;rsquo;architecture de boostAdopt fut donc de créer une extension Chrome, une application côté serveur et un client Front. Ici l&amp;rsquo;extension Chrome est utilisée car elle permet au navigateur de contacter directement les serveurs d&amp;rsquo;AdopteUnMec sans passer par un serveur intermédiaire. Normalement faire cela à travers le navigateur provoquerait une erreur de type &amp;ldquo;Cross-Origin&amp;rdquo; (le serveur xxx.com ne peut pas être appelé par la page yyy.com, il faut qu&amp;rsquo;xxx.com autorise cela spécifiquement). Il suffit de spécifier les bons attributs dans le manifest de l&amp;rsquo;extension afin de permettre cela. Le point négatif de cette architecture est la restriction sur le navigateur (utilisation obligatoire de Chrome), ainsi que l&amp;rsquo;installation de l&amp;rsquo;extension. Ce sont autant d&amp;rsquo;actions qui peuvent rebuter le futur utilisateur.&lt;/p&gt;

&lt;p&gt;La propriété &amp;ldquo;Permissions&amp;rdquo; qui permet à l&amp;rsquo;extension de contacter les serveurs d&amp;rsquo;AdopteUnMec sans générer d&amp;rsquo;erreur &amp;ldquo;Cross-Origin&amp;rdquo; :
&lt;script src=&#34;https://gist.github.com/guizmo51/bcbe01212c5b78ced84d.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Afin de minimiser les actions &amp;ldquo;utilisateur&amp;rdquo; j&amp;rsquo;ai crée un compte développeur &amp;ldquo;Chrome&amp;rdquo;  (et en payant) afin de publier l&amp;rsquo;extension officiellement  dans le catalogue officiel Chrome. En quelques clics l&amp;rsquo;extension pouvait désormais être opérationnelle dans le navigateur de l&amp;rsquo;utilisateur.&lt;/p&gt;

&lt;h2 id=&#34;business-model:5d89a49772d283f3ee4fbc1839d2b90e&#34;&gt;Business model&lt;/h2&gt;

&lt;p&gt;Le business model de boostAdopt est assez simple : l&amp;rsquo;application utilisait un système de crédits. Un crédit = une visite d&amp;rsquo;un profil.
 Lors de l&amp;rsquo;inscription de l&amp;rsquo;utilisateur son compte était crédité de 500 unités. Cela permet à l&amp;rsquo;utilisateur de tester le service le temps nécessaire afin de se faire son opinion. Ensuite plusieurs forfaits de crédits étaient proposés avec des prix dégressifs. J&amp;rsquo;utilisais payPal et son API afin de gérer les transactions.&lt;/p&gt;

&lt;h2 id=&#34;communication:5d89a49772d283f3ee4fbc1839d2b90e&#34;&gt;Communication&lt;/h2&gt;

&lt;p&gt;Ca ne sert à rien de développer un projet si personne ne l&amp;rsquo;utilise faute de communication il fallait donc communiquer sur le projet. Contrairement à de gros projets, ici le budget &amp;ldquo;Communication&amp;rdquo; était très faible.
La communication autour du projet s&amp;rsquo;est faite grâce à plusieurs leviers :
- l&amp;rsquo;utilisateur avait la possibilité de parrainer des contacts en leur fournissant un code de parrainage. A chaque contact inscrit il recevait une centaine de crédits. C&amp;rsquo;est un moyen peu onéreux de communiquer sur le projet, une sorte de bouche à oreille monétisé.
- un compte Twitter et une page Facebook afin de parler du projet.
- la réalisation de robots automatiques qui se connectaient à AdopteUnMec avec un profil féminin puis envoyait un message simulant un être humain en proposant de se connecter à boostAdopt.&lt;/p&gt;

&lt;p&gt;Ce dernier point avait toutefois quelques points noir vis à vis de l&amp;rsquo;expérience utilisateur.
- la messagerie d&amp;rsquo;AdopteUnMec à ce moment ne permettait pas de publier des liens cliquables, c&amp;rsquo;était donc un frein à l&amp;rsquo;action puisque l&amp;rsquo;utilisateur devait faire un copier/coller de l&amp;rsquo;URL.
- même avec quelques adaptations un robot ne remplace pas l&amp;rsquo;Homme, mes comptes étaient blacklistés au bout de quelques messages. Il fallait donc en recréer.&lt;/p&gt;

&lt;p&gt;Concernant la messagerie : AdopteUnMec propose une messagerie classique mais aussi une messagerie instantanée.
En décembre 2013 après quelques tests rapides je me suis aperçu que les liens cliquables étaient autorisés dans cette messagerie instantanée. Pire : il y avait même une belle faille XSS permettant d&amp;rsquo;injecter du Javascript. Pour mon usage cela m&amp;rsquo;aurait permis de rediriger automatiquement les utilisateurs vers boostAdopt. Pour des esprits malveillants ça aurait pu permettre de propager du code malicieux et de récupèrer les identifiants bancaires puisque ceux-ci apparaissaient sur le site. Lors du lancement de boostAdopt ce gros problème de sécurité était résolu.&lt;/p&gt;

&lt;p&gt;Après discussion avec d&amp;rsquo;éventuels utilisateurs ces derniers m&amp;rsquo;ont fait part de craintes vis à vis de l&amp;rsquo;application BoostAdopt.com. En effet, mon application aurait pu être un simple phishing ayant pour but de voler les identifiants.
Afin de diminuer ces craintes j&amp;rsquo;ai réalisé une vidéo expliquant le fonctionnant de boostAdopt.com&lt;/p&gt;

&lt;p&gt;PS : désolé pour l&amp;rsquo;effet &amp;ldquo;ressort&amp;rdquo; dans la vidéo, le logiciel n&amp;rsquo;était pas des plus puissants.
&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6ph7K1Y9UZE&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;h2 id=&#34;internationalisation:5d89a49772d283f3ee4fbc1839d2b90e&#34;&gt;Internationalisation&lt;/h2&gt;

&lt;p&gt;Après des recherches un peu plus poussées je me suis rendu compte que le site AdopteUnMec était ou allait être disponible dans de nombreux pays (Angleterre, Allemagne, Italie, Espagne, Mexique, etc etc). Quitte à faire une application autant maximiser les cibles. Après quelques tests je me suis aperçu que tout mon code était fonctionnel sur ces versions étrangères, seules les URLs étaient différentes. J&amp;rsquo;ai donc pris quelques heures afin d&amp;rsquo;adapter et d&amp;rsquo;ouvrir l&amp;rsquo;application à tous les pays où se trouve AdopteUnMec.&lt;/p&gt;

&lt;h2 id=&#34;post-mortem-fin-du-projet:5d89a49772d283f3ee4fbc1839d2b90e&#34;&gt;Post Mortem - Fin du projet.&lt;/h2&gt;

&lt;p&gt;AdopteUnMec a amélioré énormément son protocole de sécurité en blacklistant les comptes &amp;ldquo;spammeurs&amp;rdquo; mais aussi en bloquant les IPs de connexion. Si mon compte X se retrouve bloqué, son IP &amp;ldquo;X&amp;rdquo; l&amp;rsquo;est aussi. Si je tente de me connecter ou bien même de m&amp;rsquo;inscrire avec un nouveau compte ce dernier se retrouvait automatiquement blacklisté. Cette mesure m&amp;rsquo;a obligé à réduire la communication à travers ces robots &amp;ldquo;spammeurs&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Enfin j&amp;rsquo;ai reçu une lettre de mise en demeure du service juridique d&amp;rsquo;AdopteUnMec. Bien que j&amp;rsquo;estimais très peu de points fondés, diverses raisons associées à la lourdeur administrative m&amp;rsquo;ont fait arrêter ce projet.&lt;/p&gt;

&lt;p&gt;Si vous avez bien lu vous avez dû voir qu&amp;rsquo;à un moment j&amp;rsquo;enregistrais automatiquement les profils. Ceci est un autre projet &amp;ldquo;map.boostadopt.com&amp;rdquo; qui fera l&amp;rsquo;objet d&amp;rsquo;un autre billet. Au programme : de la cartographie et des &amp;ldquo;datas&amp;rdquo; (sans parler de &amp;ldquo;big data&amp;rdquo;).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>