<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Hacks on Blog </title>
    <link>http://localhost:1313/categories/hacks/</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Wed, 02 Sep 2015 21:20:42 CEST</updated>
    
    <item>
      <title>Evolution de l&#39;offre Airbnb à Paris entre 2008 et 2015</title>
      <link>http://localhost:1313/post/hacks/airbnb-paris/</link>
      <pubDate>Wed, 02 Sep 2015 21:20:42 CEST</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://localhost:1313/post/hacks/airbnb-paris/</guid>
      <description>&lt;p&gt;&lt;meta property=&#34;og:title&#34; content=&#34;Evolution de l&#39;offre Airbnb à Paris entre 2008 et 2009.&#34; /&gt;
&lt;meta property=&#34;og:url&#34; content=&#34;http://www.simonblum.me/post/hacks/airbnb-paris/&#34; /&gt;
&lt;meta property=&#34;og:image&#34; content=&#34;http://www.simonblum.me/images/airbnb.png&#34; /&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;http://localhost:1313/css/nouislider.min.css&#34;&gt;
&lt;style&gt;
#map {
    padding-bottom: 25px;
}
#monthLabel {
    font-weight: bold;
    color: #881226;
    font-size: large;
}
#slider {
    margin-top: 8px;
}
&lt;/style&gt;
&lt;script src=&#34;http://localhost:1313/js/jquery-1.10.2.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://localhost:1313/js/nouislider.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://localhost:1313/js/airbnb.js&#34;&gt;&lt;/script&gt;
&lt;p&gt; La carte interactive suivante présente l&amp;rsquo;évolution des logements Airbnb sur Paris entre 2008 et 2015. Afin de visualiser les données vous pouvez utiliser le &amp;ldquo;slider&amp;rdquo; ou lancer l&amp;rsquo;animation via le bouton &amp;ldquo;Lancer l&amp;rsquo;animation&amp;rdquo;.&lt;/p&gt;&lt;/p&gt;

&lt;script 
        src=&#34;https://maps.googleapis.com/maps/api/js?key=AIzaSyAUQOQnq1kt0h-Nh83XX1dPmjGSF343LHs&amp;v=3.exp&amp;signed_in=true&amp;callback=initMap&amp;libraries=visualization&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;div id=&#34;map&#34; style=&#34;width: 800px; height: 650px;&#34;&gt;&lt;/div&gt;
    &lt;p id=&#34;monthLabel&#34;&gt;&lt;span id=&#34;moisSlider&#34;&gt;&lt;/span&gt; / &lt;span id=&#34;totalOffer&#34;&gt;&lt;/span&gt; offres&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;Manipulez le curseur afin de visualiser l&amp;rsquo;évolution&lt;/p&gt;
 &lt;p&gt;&lt;div id=&#34;slider&#34;&gt;&lt;/div&gt;&lt;/p&gt;
    &lt;fieldset&gt;&lt;legend&gt;Animation automatique&lt;/legend&gt;&lt;/p&gt;

&lt;p&gt;&lt;div  style=&#34;display:inline-block;&#34;&gt;
   &lt;button class=&#34;btn waves-effect waves-light&#34; type=&#34;submit&#34; id=&#34;action&#34;&gt;Lancer l&amp;rsquo;animation&lt;/button&gt;
&lt;/div&gt;
&lt;/fieldset&gt;
&lt;p&gt;&lt;span style=&#34;font-weight:bold;&#34;&gt;Les données&lt;/span&gt; utilisées pour réaliser ce projet proviennent d&amp;rsquo;&lt;a href=&#34;http://insideairbnb.com/paris/&#34; target=&#34;_blank&#34;&gt;Inside Airbnb&lt;/a&gt; et d&amp;rsquo;un robot fait par mes soins récupérant la date d&amp;rsquo;inscription d&amp;rsquo;un utilisateur.
    Ces données s&amp;rsquo;étendent de septembre 2008 à mai 2015. Les données JSON provenant de mon propre travail sont réutilisables (licence : Attribution / Pas d&amp;rsquo;utilisation commerciale).
&lt;p&gt; &lt;span style=&#34;font-weight:bold;&#34;&gt;Méthodologie : &lt;/span&gt;Airbnb n&amp;rsquo;affiche sur son site que la date d&amp;rsquo;inscription d&amp;rsquo;un utilisateur. c&amp;rsquo;est cette date qui a été utilisée pour déterminer l&amp;rsquo;ajout d&amp;rsquo;un logement sur Airbnb. Cette méthode est fiable si l&amp;rsquo;utilisateur ne propose qu&amp;rsquo;un logement. Si par contre l&amp;rsquo;utilisateur propose 1 logement en décembre 2008 puis 5 autres en avril 2012, les 6 appartements se verront affectés à décembre 2008 (ce qui correspond à la date d&amp;rsquo;inscription de l&amp;rsquo;utilisateur).
Bien que cela ne soit pas strictement conforme à la réalité, cette dernière n&amp;rsquo;est que très peu erronée compte-tenu des statistiques sur le nombre de logement moyen proposés par un utilisateur (voir rubrique &amp;ldquo;plus de données&amp;rdquo;).
&lt;/p&gt;
&lt;p&gt; &lt;span style=&#34;font-weight:bold;&#34;&gt;Plus de données : &lt;/span&gt;
    Ce tableau présente le nombre d&amp;rsquo;occurences pour chaque valeur. Exemple pour la 1ere ligne: 22670 utilisateurs ne possèdent qu&amp;rsquo;un seul appartement. A l&amp;rsquo;opposé, 1 utilisateur en possède 169 et un autre 150.
 &lt;ul class=&#34;collapsible&#34; data-collapsible=&#34;accordion&#34;&gt;
    &lt;li&gt;
      &lt;div class=&#34;collapsible-header&#34;&gt;&lt;i class=&#34;material-icons&#34;&gt;toc&lt;/i&gt;Voir le tableau de données&lt;/div&gt;
      &lt;div class=&#34;collapsible-body&#34;&gt;&lt;table class=&#34;striped bordered centered responsive-table&#34; &gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th data-field=&#34;id&#34;&gt;Nombre de logements&lt;/th&gt;
&lt;th data-field=&#34;name&#34;&gt;Occurence&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody id=&#34;tbody&#34;&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
    &lt;/li&gt;&lt;/p&gt;

&lt;p&gt;&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-weight:bold;&#34;&gt;Merci &lt;/span&gt; à &lt;a href=&#34;https://twitter.com/vivienwack&#34;&gt;Vivien&lt;/a&gt; pour ses blagues et son logo ainsi qu&#39;à &lt;a href=&#34;https://twitter.com/ytokan&#34;&gt;Ytokan.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Concours Facebook</title>
      <link>http://localhost:1313/post/hacks/concours-facebook/</link>
      <pubDate>Wed, 15 Jul 2015 13:55:17 CEST</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://localhost:1313/post/hacks/concours-facebook/</guid>
      <description>

&lt;p&gt;La page Facebook d&amp;rsquo;une radio organisait un concours, le principe est simple : être le premier à commenter une publication spécifique entre 13h et 17h. Le 1er utilisateur à avoir répondu gagne le lot du concours. Ce dernier s&amp;rsquo;étalait sur une semaine entière.&lt;/p&gt;

&lt;p&gt;Pourquoi avoir fait ce mini hack ? Tout simplement pour prouver que sur ce genre de concours il est dommage de proposer un système de participation de ce type sachant que des solutions commerciales permettant de tricher existent. Je me suis donc lancé dans la réalisation d&amp;rsquo;un outil avec pour objectif de remporter ce concours.&lt;/p&gt;

&lt;p&gt;Dès le début le but est d&amp;rsquo;automatiser tout le système afin de ne pas avoir à rafraichir sa page toutes les 10 secondes et faire l&amp;rsquo;action de commenter. Pendant ce temps je peux vaquer sereinement à mes occupations quotidiennes. L&amp;rsquo;autre raison de l&amp;rsquo;automatisation est que dans ce genre de concours en 10 secondes on peut déjà être 15ème.&lt;/p&gt;

&lt;p&gt;Avant de débuter il faut découper le problème en deux parties afin de travailler efficacement sur ces deux parties indépendantes :
+ détection du nouveau contenu
+ soumission du commentaire.&lt;/p&gt;

&lt;p&gt;A moins d&amp;rsquo;utiliser une base de mots clés ou un dictionnaire il est impossible d&amp;rsquo;identifier à l&amp;rsquo;avance le post à commenter. J&amp;rsquo;ai donc décidé de commenter automatiquement tous les nouveaux postes publiés dans le créneau défini (13h - 17h): une unique fois lors de la détection.&lt;/p&gt;

&lt;p&gt;Tout est lié à Facebook : je vais donc utiliser leur SDK et leur API qui bien qu&amp;rsquo;elle soit mal documentée restera plus efficace sans devoir réinventer la roue.&lt;/p&gt;

&lt;p&gt;Afin de pouvoir utiliser ce SDK I il faut au préalable avoir un compte &amp;ldquo;déveloper&amp;rdquo; puis déclarer son application (nom, urls autorisées à appeler l&amp;rsquo;API , droits nécessaires..). Dans un premier temps l&amp;rsquo;application n&amp;rsquo;est visible que par vous, afin de la rendre publique il faut la soumettre aux reviewers de Facebook. Dans mon cas il n&amp;rsquo;était pas certain que l&amp;rsquo;application soit autorisée de plus il fallait un temps certain que je n&amp;rsquo;avais pas.&lt;/p&gt;

&lt;h2 id=&#34;détection-de-nouveau-contenu:fb0b9121ebebb531d16fe01d8c71c3b0&#34;&gt;Détection de nouveau contenu&lt;/h2&gt;

&lt;p&gt;Le principe de la détection de nouveau contenu est assez simple : récupérer le flux des posts, puis voir si le plus récent a changé. L&amp;rsquo;API Facebook retourne cela sous forme d&amp;rsquo;un tableau d&amp;rsquo;objet qui est déjà trié. Il suffit de stocker cet identifiant du contenu le plus récent en base de données ou fichier texte. Ensuite toutes les X secondes, dans mon cas paramétré à 4 secondes je requêtais l&amp;rsquo;API Facebook grâce au SDK pour avoir les contenus de la page de la radio. J&amp;rsquo;extrayais l&amp;rsquo;identifiant du dernier post et le comparais avec celui enregistré dans mon fichier texte. Si celui-ci avait changé alors bingo je pouvais déclencher la publication du commentaire.&lt;/p&gt;

&lt;h2 id=&#34;publication-du-commentaire:fb0b9121ebebb531d16fe01d8c71c3b0&#34;&gt;Publication du commentaire:&lt;/h2&gt;

&lt;p&gt;Pendant plusieurs heures j&amp;rsquo;ai essayé d&amp;rsquo;utiliser le SDK Facebook afin de publier le commentaire et tout garder en PHP dans un objectif d&amp;rsquo;économie de temps.
 Il s&amp;rsquo;est avéré que cela était très compliqué probablement causé par la non-approbation de l&amp;rsquo;application. En effet hormis pour le compte developper et certains droits chaque application doit être approuvée ce qui prend du temps.&lt;/p&gt;

&lt;p&gt;J&amp;rsquo;ai donc abandonné la solution PHP pour publier le commentaire à travers l&amp;rsquo;API Facebook.
 Dans un second temps comme la détection fonctionnait très bien l&amp;rsquo;application affichait directement la publication il n&amp;rsquo;y avait plus qu&amp;rsquo;à commenter. J&amp;rsquo;estimais toutefois que c&amp;rsquo;était une perte de temps.&lt;/p&gt;

&lt;p&gt;Enfin en désespoir de cause j&amp;rsquo;ai observé la requête Ajax jouée dans le navigateur, n&amp;rsquo;y croyant pas j&amp;rsquo;ai fait rejouer cette requête. Quelle ne fut pas ma surprise quand j&amp;rsquo;ai vu que ce replay avait permis de poster un nouveau commentaire.  Cette requête Ajax prenait en paramètre l&amp;rsquo;id de la la publication à commenter, le commentaire, la date et un autre paramètre. Il y a un token qui est valide 24h dedans.&lt;/p&gt;

&lt;p&gt;J&amp;rsquo;ai donc décidé d&amp;rsquo;utiliser cette requête Ajax pour publier le commentaire.&lt;/p&gt;

&lt;p&gt;Voici ce que j&amp;rsquo;ai décidé (qui va être l&amp;rsquo;architecture finale) :
Une extension chrome créée pour l&amp;rsquo;occasion va appeler le script PHP de détection de nouveaux contenus. Si ce script retourne qu&amp;rsquo;il a détecté un nouveau contenu alors l&amp;rsquo;extension chrome va déclencher la requête AJAX.&lt;/p&gt;

&lt;p&gt;Je parle ici pour la première fois d&amp;rsquo;extension Chrome, c&amp;rsquo;est quelque chose de très simple à utiliser qui permet d&amp;rsquo;injecter du Javascript sur une page.
En termes de fichiers il s&amp;rsquo;agit d&amp;rsquo;un dossier avec un manifest et des scripts.&lt;/p&gt;

&lt;p&gt;En quelques lignes de JavaScript j&amp;rsquo;ai implémenté et mis en œuvre la détection de nouveau contenu et la publication du commentaire.&lt;/p&gt;

&lt;p&gt;Coté serveur : un petit script en local était chargé de détecter le nouveau contenu. Ce script PHP était appelé toutes les 4 secondes par l&amp;rsquo;extension Chrome.&lt;/p&gt;

&lt;p&gt;Autre remarque : j&amp;rsquo;ai dû paramétrer tout le projet local en HTTPS afin de pouvoir communiquer avec l&amp;rsquo;API Facebook et notamment poster un commentaire.&lt;/p&gt;

&lt;h2 id=&#34;résultats:fb0b9121ebebb531d16fe01d8c71c3b0&#34;&gt;Résultats&lt;/h2&gt;

&lt;p&gt;Ce projet n&amp;rsquo;a été opérationnel qu&amp;rsquo;à partir du jeudi, en effet les jours précédents je me suis heurté à des soucis propres à la page Facebook : le contenu du jeu était créé chaque matin puis dé-publié, le script n&amp;rsquo;avait alors pas détecté la publication.
Le jeudi quelqu&amp;rsquo;un avait été plus rapide que moi, d&amp;rsquo;où l&amp;rsquo;importance des technologies.&lt;/p&gt;

&lt;p&gt;Un des premiers essais (non concluant)
&lt;img src=&#34;http://localhost:1313/images/facebook-concours.png&#34; alt=&#34;try again&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>